{"version":3,"file":"bulkaction.min.js","sources":["../src/bulkaction.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the bulk action for the instance management.\n *\n * @module  mod_pulse/bulkaction\n * @copyright 2023, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\"mod_pulse/bulkaction\", [\"jquery\", \"core/fragment\", \"core/modal_factory\",\n    \"core/modal_events\", \"core/notification\", \"core/str\", \"core/ajax\", \"core/templates\"],\n    (function ($, Fragment, ModalFactory, ModalEvents, notification, String, Ajax, Templates) {\n\n        /**\n         * Instance management page selectors.\n         */\n        const Selectors = {\n            table: '#manage-instance-table',\n            selectAll: '#manage-instance-tab .selectall-pulse-bulkaction',\n            deselectAll: '#manage-instance-tab .deselectall-pulse-bulkaction',\n            selectwithoutinsbtn: '#manage-instance-tab #selectwithoutins-btn',\n            CheckBoxes: \"input[name='bc[]']\",\n            DeleteBtn: '#manage-instance-tab  #bulkdelete-btn',\n            AddBtn: '#manage-instance-tab  #bulkadd-btn',\n            EnableBtn: '#manage-instance-tab  #bulkenable-btn',\n            DisableBtn: '#manage-instance-tab  #bulkdisable-btn',\n            CheckedBoxes: \"input[name='bc[]']:checked\",\n            checkboxgroups: '#manage-instance-tab .bulkaction-group',\n            tabUL: '#automation-tabs',\n            tabPane: '#pulsetemplates-tab-content .tab-pane',\n            tabContent: '#pulsetemplates-tab-content',\n            manageInstanceTab: '#manage-instance-tab',\n            templateForm: '.mform#pulse-automation-template',\n            activeNav: '#automation-tabs .nav-link.active',\n        };\n\n        /**\n         * Init the bulk select actions in the instance management tab.\n         */\n        function bulkaction() {\n            const select = document.querySelector(Selectors.selectAll);\n            const deselect = document.querySelector(Selectors.deselectAll);\n            const tableRoot = () => document.querySelector(Selectors.table);\n            const checkboxelm = () => tableRoot().querySelectorAll(Selectors.CheckBoxes);\n            const selectwithoutins = document.querySelector(Selectors.selectwithoutinsbtn);\n            const checkboxgroup = document.querySelector(Selectors.checkboxgroups);\n\n            // Whent click the select all button on the instance management tab.\n            select.addEventListener('click', () => {\n                checkboxelm().forEach(checkbox => {\n                    checkbox.checked = true;\n                    checkboxgroup.classList.remove('hide');\n                });\n            });\n\n            // Whent click the de-select all button on the instance management tab.\n            deselect.addEventListener('click', () => {\n                checkboxelm().forEach(checkbox => {\n                    checkbox.checked = false;\n                    checkboxgroup.classList.add('hide');\n                });\n            });\n\n            // Whent click the select all without instances button on the instance management tab.\n            selectwithoutins.addEventListener('click', () => {\n                checkboxelm().forEach(checkbox => {\n                    if (checkbox.classList.contains(\"emptyinstance\")) {\n                        checkbox.checked = true;\n                        checkboxgroup.classList.remove('hide');\n                    }\n                });\n            });\n\n            // Add event listener to checkboxes.\n            document.addEventListener('change', function (e) {\n\n                if (e.target.matches(Selectors.CheckBoxes)) {\n                    // Check if at least one checkbox is checked.\n                    var atLeastOneChecked = Array.from(checkboxelm()).some(function (checkbox) {\n                        return checkbox.checked;\n                    });\n\n                    // Toggle visibility of bulk edit action based on checkbox status.\n                    if (atLeastOneChecked) {\n                        checkboxgroup.classList.remove('hide');\n                    } else {\n                        checkboxgroup.classList.add('hide');\n                    }\n                }\n            });\n        }\n\n        /**\n         * Return the selected check boxes coursed ids for the instance management.\n         *\n         * @returns array $courseids course Ids\n         */\n        function getcourseids() {\n            var courseids = [];\n            var checkedboxes = document.querySelectorAll(Selectors.CheckedBoxes);\n            checkedboxes.forEach(checkedbox => {\n                courseids.push(checkedbox.value);\n            });\n            return courseids;\n        }\n\n        /**\n         * Manage the automation instances confirmation and bulk action in modal.\n         *\n         * @param {int} params\n         */\n        function manageInstances(params) {\n            const deletebtn = document.querySelector(Selectors.DeleteBtn);\n            const addbtn = document.querySelector(Selectors.AddBtn);\n            const disableBtn = document.querySelector(Selectors.DisableBtn);\n            const enableBtn = document.querySelector(Selectors.EnableBtn);\n\n            // Click the delete instance bulk action button.\n            deletebtn.addEventListener('click', function () {\n                var courseids = getcourseids();\n                getInstanceModal(courseids, params, 'delete');\n            });\n\n            // Click the add instance bulk action button.\n            addbtn.addEventListener('click', function () {\n                var courseids = getcourseids();\n                getInstanceModal(courseids, params, 'add');\n            });\n\n            // Click the disable instance bulk action button.\n            disableBtn.addEventListener('click', function () {\n                var courseids = getcourseids();\n                getInstanceModal(courseids, params, 'disable');\n            });\n\n            // Click the enable instance bulk action button.\n            enableBtn.addEventListener('click', function () {\n                var courseids = getcourseids();\n                getInstanceModal(courseids, params, 'enable');\n            });\n\n            // Show/hide the instance manage tab of template.\n            // Moved the tab outside the form, default tab handlers not works. Used custom method to show hide.\n            document.querySelector(Selectors.tabUL).addEventListener('click', function (e) {\n                templateInstanceFilter(e);\n            });\n\n            const templateInstanceFilter = (e) => {\n\n                document.querySelectorAll(Selectors.tabPane).forEach((e) => {\n                    e.classList.remove('active');\n                    e.classList.remove('show');\n                });\n                // Remove the active.\n                var href = (e === null || !e.target.matches('#automation-tabs .nav-link')) ? activeTabHref() :\n                    e.target.getAttribute('href');\n\n                document.querySelector(Selectors.tabContent + ' ' + href).classList.add('active');\n                document.querySelector(Selectors.tabContent + ' ' + href).classList.add('show');\n\n                // Hide the form.\n                if (href == Selectors.manageInstanceTab) {\n                    document.querySelector(Selectors.templateForm).style.display = 'none';\n                } else {\n                    document.querySelector(Selectors.templateForm).style.display = 'block';\n                }\n            };\n\n            // Find the active ul.\n            const activeTabHref = () => {\n                return !document.querySelector(Selectors.activeNav)\n                    || document.querySelector(Selectors.activeNav).getAttribute('href');\n            };\n\n            templateInstanceFilter(null);\n        }\n\n        /**\n         * Get the instance management confirmation modal.\n         *\n         * @param {array} courseids Course Ids\n         * @param {int} params Templated ID\n         * @param {string} action Bulk action name\n         */\n        function getInstanceModal(courseids, params, action) {\n            var args = { templateid: params, courseids: courseids, action: action };\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: String.get_string('confirmation', 'pulse'),\n                body: String.get_string('confirm' + action + 'instance', 'pulse'),\n                large: false\n            })\n                .then(function (modal) {\n\n                    modal.setButtonText('save', String.get_string('yes'));\n\n                    modal.getRoot().on(ModalEvents.save, e => {\n                        e.preventDefault();\n                        submitformdata(args);\n                        loadInstancetable(args);\n                        modal.getRoot().find('form').submit();\n                        modal.hide();\n                    });\n\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        modal.destroy();\n                    });\n                    modal.show();\n                    return modal;\n                }).catch(notification.exception);\n        }\n\n        /**\n         * Submit and recieve the message form the modal confirmation on the instance management.\n         *\n         * @param {string} params\n         */\n        function submitformdata(params) {\n            Ajax.call([{\n                methodname: 'mod_pulse_manage_instances',\n                args: params,\n                done: function (response) {\n                    window.location.reload();\n                    if (response.message) {\n                        notification.addNotification({\n                            message: response.message,\n                            type: \"success\"\n                        });\n                    }\n                }\n            }]);\n        }\n\n        /**\n         * Load the current manage instance table to replace the table root.\n         *\n         * @param {string} params\n         */\n        function loadInstancetable(params) {\n            var table = document.querySelector(Selectors.table);\n            Fragment.loadFragment('mod_pulse', 'get_manageinstance_table', 1, params).done((html, js) => {\n                Templates.replaceNode(table, html, js);\n            });\n        }\n\n        return {\n            init: function (params) {\n                bulkaction();\n                manageInstances(params);\n            },\n        };\n\n    }));\n"],"names":["define","$","Fragment","ModalFactory","ModalEvents","notification","String","Ajax","Templates","Selectors","bulkaction","select","document","querySelector","deselect","checkboxelm","querySelectorAll","selectwithoutins","checkboxgroup","addEventListener","forEach","checkbox","checked","classList","remove","add","contains","e","target","matches","Array","from","some","getcourseids","courseids","checkedbox","push","value","getInstanceModal","params","action","args","templateid","create","type","types","SAVE_CANCEL","title","get_string","body","large","then","modal","setButtonText","getRoot","on","save","preventDefault","call","methodname","done","response","window","location","reload","message","addNotification","submitformdata","table","loadFragment","html","js","replaceNode","loadInstancetable","find","submit","hide","hidden","destroy","show","catch","exception","init","deletebtn","addbtn","disableBtn","enableBtn","templateInstanceFilter","href","getAttribute","activeTabHref","style","display","manageInstances"],"mappings":"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"}